{"version":3,"sources":["client.js","components/third/third.component.jsx","pages/scroller.page.jsx","App.js","reportWebVitals.js","index.js"],"names":["sanityClient","projectId","dataset","useCdn","Right","position","content","dispatchAddToHistory","console","log","typeTag","t","returnType","_type","className","title","blocks","text","clientConfig","references","map","post","index","onClick","type","payload","id","matched","slug","current","linkelementtarget","tagged","imageUrlBuilder","browseHistory","historyReducer","action","addToBrowseHistory","length","push","forwardBrowseHistory","backwardBrowseHistory","pop","OnePost","useReducer","historyState","dispatch","useState","postData","setPostData","historyOffset","useParams","historyItem","returnHistoryState","pos","returnedPos","historyStateHasContent","i","condition","useEffect","fetchRequest","fetch","then","data","catch","error","left","middle","right","App","component","scroller","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.138b25a5.chunk.js","sourcesContent":["import sanityClient from \"@sanity/client\";\n\nexport default sanityClient({\n  projectId: \"yjflfwft\", // find this at manage.sanity.io or in your sanity.json\n  dataset: \"production\", // this is from those question during 'sanity init'\n  useCdn: true,\n});","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BlockContent from \"@sanity/block-content-to-react\";\n\nfunction returnType(t){\n    switch (t){\n        case 'tagItem':\n            return '(tag)'\n        break;\n        case 'referenceItem':\n            return '(reference)'\n        break;\n        case 'project':\n            return '(project)'\n        break;\n        default:\n            return '';\n    }\n}\n\nconst Right = ({position, content, dispatchAddToHistory,sanityClient}) =>{\n    console.log(content)\nconst typeTag = returnType(content._type);\n    return(\n        \n    <div className={`thirdWrapper ${content._type}`}>\n        {\n        (content._type != 'tagItem')\n          ?\n          <div className=\"thirdContent\">\n            <div className={`title`}>{content.title}<br/>{typeTag}</div>\n            <div className=\"blockContent\">\n                        <BlockContent\n                            blocks={content.text}\n                            projectId={sanityClient.clientConfig.projectId}\n                            dataset={sanityClient.clientConfig.dataset}\n                        />\n            </div>\n            <div className=\"references\">\n                Related:\n                <br/>\n                <br/>\n                {content.references.map(\n                (post, index) =>\n                    (\n                    <div key={index}>\n                        <div onClick={() => dispatchAddToHistory({ type: 'add', payload: {position:position,id:post.matched[0].slug.current} })} linkelementtarget={post.matched[0].slug.current} className={`linkElement ${post.matched[0]._type}`}>{post.matched[0].title}</div>\n                    </div>\n                    )\n                )\n                }\n            </div>\n          </div>\n          : \n          <div className=\"thirdContent\">\n            <div className=\"title\">{content.title}<br/>{typeTag}</div>\n            <div className=\"blockContent\">\n                        <BlockContent\n                            blocks={content.text}\n                            projectId={sanityClient.clientConfig.projectId}\n                            dataset={sanityClient.clientConfig.dataset}\n                        />\n            </div>\n            <div className=\"references\">\n                Items tagged with {content.title}:\n                <br/>\n                <br/>\n                {content.tagged.map(\n                (post, index) =>\n                    (\n                    <div key={index}>\n                        <div onClick={() => dispatchAddToHistory({ type: 'add', payload: {position:position,id:post.slug.current} })} linkelementtarget={post.slug.current} className={`linkElement ${post._type}`}>{post.title}</div>\n                    </div>\n                    )\n                )\n                }\n            </div>\n          </div>\n      }\n    </div>)\n}\n\nexport default Right;","import React, { useEffect, useState, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client.js\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport { Link } from \"react-router-dom\";\n\nimport Third from '../components/third/third.component';\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nconst browseHistory = ['flowers', '',''];\n\n    const historyReducer = (browseHistory, action) => {\n        console.log(action.payload);\n        switch (action.type){\n            case 'add':\n                const addToBrowseHistory = [...browseHistory];\n                switch (action.payload.position){\n                    case 'left':\n                        console.log(action.payload.position);\n                         addToBrowseHistory[addToBrowseHistory.length-1] = '';\n                         addToBrowseHistory[addToBrowseHistory.length-2] = (action.payload.id);\n\n                    break;\n                    case 'middle':\n                        console.log(action.payload.position);\n                        addToBrowseHistory[addToBrowseHistory.length-1] = (action.payload.id);\n                    break;\n                    case 'right':\n                        console.log(action.payload.position);\n                        addToBrowseHistory.push(action.payload.id);\n                        \n                    break;\n                }\n                console.log(addToBrowseHistory);\n                return addToBrowseHistory;\n            break;\n            case 'forward':\n                const forwardBrowseHistory = [...browseHistory];\n                forwardBrowseHistory.push(action.payload);\n                // newBrowseHistory.shift();\n                console.log(forwardBrowseHistory);\n                return forwardBrowseHistory;\n            break;\n            case 'backward':\n                const backwardBrowseHistory = [...browseHistory];\n                backwardBrowseHistory.pop();\n                console.log(backwardBrowseHistory);\n                return backwardBrowseHistory;\n            break;\n            default:\n                return;\n        }\n    }\n\nconst OnePost = () => { \n\nconst [historyState, dispatch] = useReducer(historyReducer, browseHistory);\nconst [postData, setPostData] = useState(null);\nconst [historyOffset, setHistoryOffset] = useState(1);\nconst {slug} = useParams();\n\nfunction dispatchAddToHistory(historyItem) {\n    console.log(historyItem);\n    dispatch({ type: historyItem.type, payload: {id:historyItem.payload.id,position:historyItem.payload.position} });\n}\n\nfunction returnHistoryState(pos){\n    console.log(pos);\n    let returnedPos = '';\n    if((historyState.length-pos) != null){\n        returnedPos = historyState[(historyState.length-pos)*historyOffset]\n    }\n    return returnedPos;\n}\n\nfunction historyStateHasContent(i){\n    console.log(historyState[historyState.length-i]);\n    let condition;\n    if (!historyState[historyState.length-i]){\n        console.log('false');\n        condition = false\n    } else{\n        console.log('true');\n        condition = true\n    }\n    return condition\n}\n\nuseEffect(() => {\n    let fetchRequest = `*[]{ \n        \"right\":${historyStateHasContent(1) ? ` *[slug.current == \"${returnHistoryState(1)}\"]{\n                    title,\n                    _type,\n                    text,\n                    \"references\": referenceTags[]{\"matched\": *[_type == \"tagItem\" && _id == ^._ref || _type == \"referenceItem\" && _id == ^._ref]},\n                    \"tagged\": *[_type == \"referenceItem\" && references(^._id) || _type == \"project\" && references(^._id)]{ title,slug,_type },\n                },\n            `:`{},`}\n            \"middle\":${historyStateHasContent(2) ? ` *[slug.current == \"${returnHistoryState(2)}\"]\n                {\n                    title,\n                    _type,\n                    text,\n                    \"references\": referenceTags[]{\"matched\": *[_type == \"tagItem\" && _id == ^._ref || _type == \"referenceItem\" && _id == ^._ref]},\n                    \"tagged\": *[_type == \"referenceItem\" && references(^._id) || _type == \"project\" && references(^._id)]{ title,slug,_type },\n                },\n            `:`{},`}\n            \"left\": ${historyStateHasContent(3) ? ` *[slug.current == \"${returnHistoryState(3)}\"]\n                {\n                    title,\n                    _type,\n                    text,\n                    \"references\": referenceTags[]{\"matched\": *[_type == \"tagItem\" && _id == ^._ref || _type == \"referenceItem\" && _id == ^._ref]},\n                    \"tagged\": *[_type == \"referenceItem\" && references(^._id) || _type == \"project\" && references(^._id)]{ title,slug,_type },\n                },\n            `:`{}`}}`; \n    sanityClient\n        .fetch(fetchRequest)\n        .then((data) => setPostData(data[0]))\n        .catch(console.error);\n        console.log(postData);\n}, [slug, historyState, historyOffset]);\n\nif (!postData) return <div>Loading...</div>;\n  return (\n    <div className=\"home\">\n        {/* <div className=\"nav\">\n            <div className={historyState.length > 3 ? 'navActive' : 'navInactive'} onClick={() => setHistoryOffset(historyOffset + 1)}> &larr; Backward </div>\n            <div className={historyOffset > 1 ? 'navActive' : 'navInactive'} onClick={() => setHistoryOffset(historyOffset - 1)}> Forward &rarr; </div>\n        </div> */}\n        <div className=\"content\">\n            {postData.left.length ?\n                <Third position='left' content={postData.left[0]} dispatchAddToHistory={dispatchAddToHistory} sanityClient={sanityClient}/>\n            :''}\n            {postData.middle.length ?\n                <Third position='middle' content={postData.middle[0]} dispatchAddToHistory={dispatchAddToHistory} sanityClient={sanityClient}/>\n            :''}\n            {postData.right.length ?\n                <Third position='right' content={postData.right[0]} dispatchAddToHistory={dispatchAddToHistory} sanityClient={sanityClient}/>\n            :''}\n        </div>\n    </div>\n  );\n}\n\nexport default OnePost;","import './App.css';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport scroller from \"./pages/scroller.page.jsx\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Route component={scroller} path=\"/NadineBotha/\" />\n      </div>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}